
# 1 "arialNarrow_12ptBitmaps.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 38
typedef signed long int int32_t;

# 45
typedef unsigned char uint8_t;

# 51
typedef unsigned int uint16_t;

# 67
typedef unsigned long int uint32_t;

# 75
typedef signed char int_least8_t;

# 82
typedef signed int int_least16_t;

# 104
typedef signed long int int_least32_t;

# 111
typedef unsigned char uint_least8_t;

# 117
typedef unsigned int uint_least16_t;

# 136
typedef unsigned long int uint_least32_t;

# 145
typedef signed char int_fast8_t;

# 152
typedef signed int int_fast16_t;

# 174
typedef signed long int int_fast32_t;

# 181
typedef unsigned char uint_fast8_t;

# 187
typedef unsigned int uint_fast16_t;

# 206
typedef unsigned long int uint_fast32_t;

# 212
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 8 "lcd_highlevel.h"
typedef struct
{
uint8_t width;
uint16_t offset;
}FONT_CHAR_INFO;

typedef struct
{
uint8_t height;
uint8_t start_char;
uint8_t end_char;
const FONT_CHAR_INFO * descriptor;
const uint8_t * bitmap;

}FONT_INFO;

# 50
typedef enum
{
A_LEFT,
A_RIGHT,
A_CENTER
}ALIGN;

# 64
typedef struct
{
uint16_t bfType;
uint32_t bfSize;
uint16_t bfRvd1;
uint16_t bfRvd2;
uint32_t bfOffBits;
uint32_t biSize;
uint32_t biWidth;
uint32_t biHeight;
uint16_t biPlanes;
uint16_t biBitCount;
uint32_t biCompression;
uint32_t biSizeImage;
uint32_t biXPelsPerMeter;
uint32_t biYPelsPerMeter;
uint32_t biClrUsed;
uint32_t biClrImportant;
}BMP_STRUCT;




typedef struct
{
uint16_t posX;
uint16_t posY;
uint16_t width;
uint16_t height;
uint16_t txtColor;
uint16_t bgColor;
const uint8_t *text;
FONT_INFO * font;
uint8_t pressed;
void (*fpPress)(uint8_t);
void (*fpReleased)(uint8_t);
void (*fpOut)(uint8_t);
uint8_t index;
}btn_t;




typedef struct
{
uint16_t posX;
uint16_t posY;
uint16_t width;
uint16_t height;
uint16_t sldColor;
uint16_t bgColor;
uint16_t borderColor;
uint16_t cursorWidth;
uint8_t pressed;
uint16_t value;
uint16_t oldValue;
uint16_t steps;
void (*fpPress)();
}sld_t;

# 138
void LCD_ButtonCreate(uint16_t posX, uint16_t posY,
uint16_t width, uint16_t height,
uint16_t txtColor, uint16_t bgColor,
const uint8_t * textOrBmp, FONT_INFO * font,
void (*fpPress)(uint8_t), void (* fpReleased)(uint8_t), void (* fpOut)(uint8_t),
btn_t * button,
uint8_t index);

# 153
void LCD_ButtonDraw(btn_t * button);

# 161
void LCD_ButtonUpdate(btn_t * button);

# 175
void LCD_SliderCreate(uint16_t posX, uint16_t posY,
uint16_t width, uint16_t height,
uint16_t sldColor, uint16_t bgColor, uint16_t borderColor,
uint16_t cursorWidth,
uint16_t steps,
void (* fpPress)(),
sld_t * slider);

# 189
void LCD_SliderUpdate(sld_t * slider);

# 197
void LCD_SliderDraw(sld_t * slider);

# 206
uint8_t LCD_InSlider(sld_t * slider, uint16_t posX, uint16_t posY);

# 215
uint8_t LCD_InButton(btn_t * button, uint16_t posX, uint16_t posY);

# 224
void LCD_Init(void);

# 233
void LCD_Fill(uint16_t color);

# 241
void LCD_SetPixel(uint16_t posX,uint16_t posY, uint16_t color);

# 256
void LCD_DrawRect(uint16_t posX1,uint16_t posY1, uint16_t posX2,
uint16_t posY2,uint8_t fill,uint16_t color);

# 271
void LCD_DrawText(const uint8_t * msg,const FONT_INFO * font, ALIGN align,
uint16_t posX, uint16_t posY, uint16_t color, uint16_t bg_color);

# 281
uint16_t RGB2LCD(uint8_t * colorTableEntry);

# 295
uint8_t LCD_Bitmap(const uint8_t * bmpPtr, uint16_t posX, uint16_t posY);

# 7 "arialNarrow_12ptBitmaps.c"
const uint8_t arialNarrow_12ptBitmaps[] =
{

0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0xD8,
0xD8,
0xD8,
0xD8,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x12,
0x12,
0x24,
0xFE,
0xFE,
0x48,
0xFE,
0xFE,
0x48,
0x90,
0x90,
0x00,
0x00,
0x00,


0x10,
0x7C,
0xFC,
0xD6,
0xD0,
0xF0,
0x7C,
0x1E,
0x16,
0xD6,
0x7E,
0x7C,
0x10,
0x00,
0x00,


0x00, 0x00,
0x61, 0x00,
0x91, 0x00,
0x92, 0x00,
0x92, 0x00,
0x94, 0x00,
0x65, 0x80,
0x06, 0x40,
0x0A, 0x40,
0x0A, 0x40,
0x12, 0x40,
0x11, 0x80,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0x38,
0x7C,
0x6C,
0x7C,
0x30,
0x78,
0xDA,
0xCE,
0xCE,
0xFF,
0x7A,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x10,
0x20,
0x60,
0x60,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x60,
0x60,
0x20,
0x10,


0x00,
0x80,
0x40,
0x60,
0x20,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0x60,
0x60,
0x40,
0x80,


0x00,
0x20,
0xA8,
0xF8,
0x20,
0x50,
0x50,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x30,
0x30,
0x30,
0xFC,
0xFC,
0x30,
0x30,
0x30,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x40,
0x40,
0x80,


0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xF0,
0xF0,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x30,
0x30,
0x30,
0x60,
0x60,
0x60,
0x60,
0x60,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x78,
0x78,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0x78,
0x78,
0x00,
0x00,
0x00,


0x00,
0x30,
0x30,
0x70,
0xF0,
0xB0,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0x00,
0x00,
0x00,


0x00,
0x38,
0x7C,
0xCC,
0xCC,
0x0C,
0x18,
0x38,
0x70,
0x60,
0xFC,
0xFC,
0x00,
0x00,
0x00,


0x00,
0x78,
0xFC,
0xCC,
0x0C,
0x38,
0x38,
0x0C,
0x0C,
0xCC,
0xF8,
0x78,
0x00,
0x00,
0x00,


0x00,
0x0C,
0x1C,
0x1C,
0x3C,
0x2C,
0x6C,
0xCC,
0xFE,
0xFE,
0x0C,
0x0C,
0x00,
0x00,
0x00,


0x00,
0x7C,
0x7C,
0x60,
0xD8,
0xFC,
0xCC,
0x0C,
0xCC,
0xCC,
0x78,
0x78,
0x00,
0x00,
0x00,


0x00,
0x70,
0x78,
0xD8,
0xC0,
0xF0,
0xF8,
0xD8,
0xD8,
0xD8,
0x78,
0x70,
0x00,
0x00,
0x00,


0x00,
0xF8,
0xF8,
0x18,
0x10,
0x30,
0x30,
0x20,
0x60,
0x60,
0x60,
0x60,
0x00,
0x00,
0x00,


0x00,
0x78,
0xFC,
0xCC,
0xCC,
0x78,
0x78,
0xCC,
0xCC,
0xCC,
0xFC,
0x78,
0x00,
0x00,
0x00,


0x00,
0x70,
0xF8,
0xCC,
0xCC,
0xCC,
0xFC,
0x7C,
0x0C,
0xCC,
0xF8,
0x70,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x00,
0x00,
0x00,
0x00,
0xC0,
0xC0,
0x40,
0x40,
0x80,


0x00,
0x00,
0x04,
0x1C,
0x38,
0xF0,
0xC0,
0xF0,
0x38,
0x1C,
0x04,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xFC,
0xFC,
0x00,
0xFC,
0xFC,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x80,
0xE0,
0x70,
0x3C,
0x0C,
0x1C,
0x70,
0xE0,
0x80,
0x00,
0x00,
0x00,
0x00,


0x00,
0x78,
0xFC,
0xCC,
0xCC,
0x1C,
0x18,
0x30,
0x30,
0x00,
0x30,
0x30,
0x00,
0x00,
0x00,


0x00, 0x00,
0x0F, 0xC0,
0x1F, 0xE0,
0x30, 0x30,
0x66, 0xD8,
0xEF, 0xD8,
0xDD, 0xD8,
0xD8, 0x98,
0xD9, 0x98,
0xD9, 0xB0,
0xDF, 0xF0,
0x6E, 0xC8,
0x70, 0x10,
0x3F, 0xE0,
0x0F, 0xC0,


0x00, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x36, 0x00,
0x36, 0x00,
0x36, 0x00,
0x63, 0x00,
0x7F, 0x00,
0x7F, 0x00,
0xC1, 0x80,
0xC1, 0x80,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0xFC,
0xFE,
0xC6,
0xC6,
0xFC,
0xFC,
0xC6,
0xC6,
0xC6,
0xFE,
0xFC,
0x00,
0x00,
0x00,


0x00,
0x3C,
0x7E,
0x67,
0xC2,
0xC0,
0xC0,
0xC0,
0xC2,
0x67,
0x7E,
0x3C,
0x00,
0x00,
0x00,


0x00,
0xF8,
0xFC,
0xCE,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0xCE,
0xFC,
0xF8,
0x00,
0x00,
0x00,


0x00,
0xFE,
0xFE,
0xC0,
0xC0,
0xFE,
0xFE,
0xC0,
0xC0,
0xC0,
0xFE,
0xFE,
0x00,
0x00,
0x00,


0x00,
0xFC,
0xFC,
0xC0,
0xC0,
0xF8,
0xF8,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x3C,
0x7E,
0x67,
0xC3,
0xC0,
0xCF,
0xCF,
0xC3,
0x63,
0x7F,
0x3C,
0x00,
0x00,
0x00,


0x00,
0xC6,
0xC6,
0xC6,
0xC6,
0xFE,
0xFE,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x0C,
0x0C,
0x0C,
0x0C,
0x0C,
0x0C,
0x0C,
0xCC,
0xCC,
0xFC,
0x78,
0x00,
0x00,
0x00,


0x00,
0xC3,
0xC6,
0xCC,
0xCC,
0xD8,
0xFC,
0xEC,
0xC6,
0xC6,
0xC3,
0xC3,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xFE,
0xFE,
0x00,
0x00,
0x00,


0x00, 0x00,
0xE3, 0x80,
0xE3, 0x80,
0xE3, 0x80,
0xF7, 0x80,
0xD5, 0x80,
0xD5, 0x80,
0xD5, 0x80,
0xD5, 0x80,
0xDD, 0x80,
0xD9, 0x80,
0xC9, 0x80,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0xC6,
0xE6,
0xE6,
0xE6,
0xF6,
0xD6,
0xDE,
0xDE,
0xCE,
0xCE,
0xC6,
0x00,
0x00,
0x00,


0x00,
0x3C,
0x7E,
0x67,
0xC3,
0xC3,
0xC3,
0xC3,
0xC3,
0x66,
0x7E,
0x3C,
0x00,
0x00,
0x00,


0x00,
0xFC,
0xFE,
0xC6,
0xC6,
0xC6,
0xFE,
0xFC,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00, 0x00,
0x3C, 0x00,
0x7E, 0x00,
0xE7, 0x00,
0xC3, 0x00,
0xC3, 0x00,
0xC3, 0x00,
0xC3, 0x00,
0xCB, 0x00,
0x66, 0x00,
0x7F, 0x00,
0x3D, 0x80,
0x00, 0x80,
0x00, 0x00,
0x00, 0x00,


0x00,
0xFC,
0xFE,
0xC6,
0xC6,
0xFE,
0xFC,
0xCC,
0xC6,
0xC6,
0xC6,
0xC3,
0x00,
0x00,
0x00,


0x00,
0x7C,
0xFE,
0xC6,
0xC6,
0xF0,
0x7C,
0x0E,
0xC6,
0xC6,
0xFE,
0x7C,
0x00,
0x00,
0x00,


0x00,
0xFF,
0xFF,
0x18,
0x18,
0x18,
0x18,
0x18,
0x18,
0x18,
0x18,
0x18,
0x00,
0x00,
0x00,


0x00,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0xC6,
0x7E,
0x38,
0x00,
0x00,
0x00,


0x00, 0x00,
0xC1, 0x80,
0xC1, 0x80,
0x63, 0x00,
0x63, 0x00,
0x63, 0x00,
0x36, 0x00,
0x36, 0x00,
0x36, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00, 0x00,
0xC4, 0x60,
0xC4, 0x60,
0xCA, 0x60,
0x6A, 0xC0,
0x6A, 0xC0,
0x6A, 0xC0,
0x6A, 0xC0,
0x6A, 0xC0,
0x31, 0x80,
0x31, 0x80,
0x31, 0x80,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00, 0x00,
0xC1, 0x80,
0x63, 0x00,
0x36, 0x00,
0x36, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x1C, 0x00,
0x36, 0x00,
0x36, 0x00,
0x63, 0x00,
0xC1, 0x80,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0xC3,
0x66,
0x66,
0x3C,
0x3C,
0x18,
0x18,
0x18,
0x18,
0x18,
0x18,
0x00,
0x00,
0x00,


0x00,
0xFE,
0xFE,
0x06,
0x0C,
0x18,
0x30,
0x30,
0x60,
0xC0,
0xFE,
0xFE,
0x00,
0x00,
0x00,


0x00,
0xE0,
0xE0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xE0,
0xE0,


0x00,
0xC0,
0xC0,
0xC0,
0x60,
0x60,
0x60,
0x60,
0x60,
0x30,
0x30,
0x30,
0x00,
0x00,
0x00,


0x00,
0xE0,
0xE0,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0xE0,
0xE0,


0x00,
0x38,
0x38,
0x6C,
0x6C,
0x6C,
0xC6,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0xFE,
0x00,


0x00,
0xC0,
0x60,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x78,
0xFC,
0xCC,
0x3C,
0xFC,
0xCC,
0xFC,
0x6C,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xF8,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xF8,
0xF8,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x70,
0x78,
0xD8,
0xC0,
0xC0,
0xD8,
0x78,
0x70,
0x00,
0x00,
0x00,


0x00,
0x0C,
0x0C,
0x0C,
0x7C,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xFC,
0x7C,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x70,
0xF8,
0xD8,
0xF8,
0xC0,
0xD8,
0xF8,
0x70,
0x00,
0x00,
0x00,


0x00,
0x30,
0x70,
0x60,
0xF0,
0xF0,
0x60,
0x60,
0x60,
0x60,
0x60,
0x60,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x6C,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xFC,
0x6C,
0x0C,
0xCC,
0x78,


0x00,
0xC0,
0xC0,
0xC0,
0xD8,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x30,
0x30,
0x00,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0x30,
0xF0,
0xE0,


0x00,
0xC0,
0xC0,
0xC0,
0xCC,
0xD8,
0xF0,
0xF8,
0xD8,
0xD8,
0xCC,
0xCC,
0x00,
0x00,
0x00,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0xD9, 0x80,
0xFF, 0xC0,
0xCC, 0xC0,
0xCC, 0xC0,
0xCC, 0xC0,
0xCC, 0xC0,
0xCC, 0xC0,
0xCC, 0xC0,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0x00,
0x00,
0x00,
0xD8,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x78,
0x78,
0xCC,
0xCC,
0xCC,
0xCC,
0x78,
0x78,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xD8,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xF8,
0xD8,
0xC0,
0xC0,
0xC0,


0x00,
0x00,
0x00,
0x00,
0x6C,
0xFC,
0xCC,
0xCC,
0xCC,
0xCC,
0xFC,
0x6C,
0x0C,
0x0C,
0x0C,


0x00,
0x00,
0x00,
0x00,
0xD0,
0xF0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0x70,
0xF8,
0xC8,
0xE0,
0x38,
0x98,
0xF8,
0x70,
0x00,
0x00,
0x00,


0x00,
0x20,
0x60,
0x60,
0xF0,
0xF0,
0x60,
0x60,
0x60,
0x60,
0x70,
0x70,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xCC,
0xFC,
0x6C,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xC6,
0xC6,
0x6C,
0x6C,
0x6C,
0x38,
0x38,
0x38,
0x00,
0x00,
0x00,


0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0xDD, 0x80,
0xDD, 0x80,
0xDD, 0x80,
0xD5, 0x80,
0x55, 0x00,
0x77, 0x00,
0x77, 0x00,
0x77, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,


0x00,
0x00,
0x00,
0x00,
0xCC,
0x78,
0x78,
0x30,
0x30,
0x78,
0x78,
0xCC,
0x00,
0x00,
0x00,


0x00,
0x00,
0x00,
0x00,
0xC6,
0xC6,
0x6C,
0x6C,
0x6C,
0x38,
0x38,
0x38,
0x30,
0xF0,
0xE0,


0x00,
0x00,
0x00,
0x00,
0xFC,
0xFC,
0x18,
0x30,
0x30,
0x60,
0xFC,
0xFC,
0x00,
0x00,
0x00,


0x00,
0x30,
0x70,
0x60,
0x60,
0x60,
0x60,
0xC0,
0xC0,
0x60,
0x60,
0x60,
0x60,
0x70,
0x30,


0x00,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,
0xC0,


0x00,
0xC0,
0xE0,
0x60,
0x60,
0x60,
0x60,
0x30,
0x30,
0x60,
0x60,
0x60,
0x60,
0xE0,
0xC0,


0x00,
0x00,
0x00,
0x00,
0x00,
0xE4,
0xFC,
0x9C,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
0x00,
};



const FONT_CHAR_INFO arialNarrow_12ptDescriptors[] =
{
{8, 0},
{2, 15},
{5, 30},
{7, 45},
{7, 60},
{10, 75},
{8, 105},
{2, 120},
{4, 135},
{4, 150},
{5, 165},
{6, 180},
{2, 195},
{4, 210},
{2, 225},
{4, 240},
{6, 255},
{4, 270},
{6, 285},
{6, 300},
{7, 315},
{6, 330},
{5, 345},
{5, 360},
{6, 375},
{6, 390},
{2, 405},
{2, 420},
{6, 435},
{6, 450},
{6, 465},
{6, 480},
{13, 495},
{9, 525},
{7, 555},
{8, 570},
{7, 585},
{7, 600},
{6, 615},
{8, 630},
{7, 645},
{2, 660},
{6, 675},
{8, 690},
{7, 705},
{9, 720},
{7, 750},
{8, 765},
{7, 780},
{9, 795},
{8, 825},
{7, 840},
{8, 855},
{7, 870},
{9, 885},
{11, 915},
{9, 945},
{8, 975},
{7, 990},
{3, 1005},
{4, 1020},
{3, 1035},
{7, 1050},
{7, 1065},
{3, 1080},
{6, 1095},
{6, 1110},
{5, 1125},
{6, 1140},
{5, 1155},
{4, 1170},
{6, 1185},
{6, 1200},
{2, 1215},
{4, 1230},
{6, 1245},
{2, 1260},
{10, 1275},
{6, 1305},
{6, 1320},
{6, 1335},
{6, 1350},
{4, 1365},
{5, 1380},
{4, 1395},
{6, 1410},
{7, 1425},
{9, 1440},
{6, 1470},
{7, 1485},
{6, 1500},
{4, 1515},
{2, 1530},
{4, 1545},
{6, 1560},
};


const FONT_INFO arialNarrow_12ptFontInfo =
{
15,
' ',
'~',
arialNarrow_12ptDescriptors,
arialNarrow_12ptBitmaps,
};
